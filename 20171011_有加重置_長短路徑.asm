list p=18f4520
#include <p18f4520.inc>
CONFIG OSC=HS, PWRT=ON, WDT=OFF, LVP=OFF,CCP2MX=PORTBE

#define duty_100 B'10011011'
#define duty_98  B'10010111'
#define duty_96  B'10010100'
#define duty_94  B'10010001'
#define duty_92  B'10001110'
#define duty_90  B'10001011'
#define duty_88  B'10001000'
#define duty_86  B'10000101'
#define duty_84  B'10000010'
#define duty_82  B'01111111'
#define duty_80  B'01111100'
#define duty_78  B'01111000'
#define duty_76  B'01110101'
#define duty_74  B'01110010'
#define duty_72  B'01101111'
#define duty_70  B'01101100'
#define duty_68  B'01101001'
#define duty_66  B'01100110'
#define duty_64  B'01100011'
#define duty_62  B'01100000'
#define duty_60  B'01011101'
#define duty_58  B'01011001'
#define duty_56  B'01010110'
#define duty_54  B'01010011'
#define duty_52  B'01010000'
#define duty_50  B'01001101'
#define duty_0   B'00000000'

CBLOCK 0X20
COUNT_R        ;traction with laser A 
COUNT_L        ;traction with laser A
COUNT_R_B      ;traction with laser B 
COUNT_L_B      ;traction with laser B 
COUNT_C        ;judge for traction  
COUNT_INT      ;judge if there is a red point
COUNT_RED      ;count the red points 
HIT_NUMBER     ;which number to be hit with arduino
HIT_FLAG       ;if it is time to be no traction
INT_FLAG       ;if the interrrupt finishes
CHOOSE_FLAG    ;short or long traction
START_FLAG     ;if it's traction with laser A for few seconds
FRONT_FLAG     ;if it's traction with laser A 
BACK_FLAG      ;if it's traction with laser B
BACK_FLAG2     ;the direction for traction with laser B
TRAC_FLAG      ;blind traction
LONG_FLAG      ;traction with only laser A
RESET_FLAG
STATUS_TEMP 
WREG_TEMP 
BSR_TEMP 
ENDC 

val_us        equ .147
val_ms        equ .100
val_s         equ .1000
; warnig! value can not be over 1024
count         equ 0x3A
count_ms      equ 0x3B

val_revise    equ .1000
count_revise  equ 0x3C
count_revise2 equ 0x3D

org 0x00
  GOTO INITIAL
;-------------high priority interrupt program----------
org 0x08
  GOTO JUDGE_RED
;-------------low priority interrupt program----------
org 0x18
  GOTO INT_RX
;-------------------Initial program start----------------
org 0x40
INITIAL:
  BSF TRISA,0       ;laser from two sides with arduino
  BSF TRISA,1
  BSF TRISA,2
  BSF TRISA,4       ;traction A
  BSF TRISA,5       ;traction A
  BCF TRISB,1       ;red point with interrupt
  BCF LATB,1
  BSF TRISB,2       ;started by arduino
  BCF TRISB,4       ;direction of pwm
  BCF TRISB,5       ;direction of pwm
  BCF TRISB,6       ;direction of pwm
  BCF TRISB,7       ;direction of pwm
  BCF TRISC,3       ;direction of pwm
  BSF TRISC,4       ;traction B
  BSF TRISC,5       ;traction B
  BCF TRISC,6       ;TX with arduino
  BSF TRISC,7       ;RX with arduino with interrupt
  SETF TRISD        ;traction A & B
  CLRF TRISE        ;direction of pwm
  MOVLW B'00001111' ;let all pins be digital
  MOVWF ADCON1
  BCF ADCON0,ADON      
  CALL INITIAL_2
  CALL INIT_CCP
  CALL INITIAL_INT
  CALL INITIAL_TXRX
  GOTO START
;-------Start program (short or long & which point)-------
START:
  BTFSC PORTA,2
  SETF RESET_FLAG
  BTFSC PORTA,1
  SETF CHOOSE_FLAG
  BTFSS PORTB,2
  GOTO START
  MOVLW B'00000001'
  CPFSEQ COUNT_RED
  GOTO LOOP_1
  GOTO START_3
START_3:
  CALL FORWARD    ;REMEMBER!!!
  GOTO LOOP_1
;------------------Main program (traction)---------------
LOOP_1:  
  CLRF COUNT_C
  CLRF COUNT_R
  CLRF COUNT_L
  CLRF COUNT_R_B 
  CLRF COUNT_L_B 

  BTFSC PORTD,3
  CALL INCREASE_1
  BTFSC PORTD,2
  INCF COUNT_R
  BTFSC PORTD,1
  INCF COUNT_L
  BTFSC PORTD,0
  CALL INCREASE_2
  NOP
  BTFSC PORTD,7
  CALL INCREASE_11
  BTFSC PORTD,6
  INCF COUNT_R_B 
  BTFSC PORTD,5 
  INCF COUNT_L_B 
  BTFSC PORTD,4 
  CALL INCREASE_22
  NOP
  MOVLW B'00000000'  
  CPFSEQ BACK_FLAG
  GOTO ACTION_TRACTION
  CPFSEQ TRAC_FLAG
  GOTO LOOP_9
  CPFSEQ FRONT_FLAG
  GOTO LOOP_4
  CPFSEQ HIT_FLAG
  GOTO LOOP_7
  CPFSEQ START_FLAG
  GOTO LOOP_2
  GOTO START_4
;-----------------Main program (traction A)--------------
START_4:              
  DCFSNZ count_revise  ;traction with laser A
  GOTO START_4_1
  GOTO JUDGE_1
START_4_1:  
  MOVLW val_revise
  MOVWF count_revise
  DCFSNZ count_revise2
  GOTO START_4_2
  GOTO JUDGE_1
START_4_2:
  MOVLW val_revise
  MOVWF count_revise
  MOVWF count_revise2
  SETF START_FLAG
  GOTO LOOP_2
;-----------------Main program (traction B)--------------
LOOP_2:                 ;traction with laser B 
  CLRF COUNT_INT
  BTFSS PORTD,3
  INCF COUNT_INT 
  BTFSS PORTD,2
  INCF COUNT_INT 
  BTFSS PORTD,1
  INCF COUNT_INT 
  BTFSS PORTD,0
  INCF COUNT_INT 
  MOVLW B'00000100'
  CPFSEQ COUNT_INT
  GOTO JUDGE_2
  MOVLW B'11111111'
  CPFSEQ LONG_FLAG
  GOTO ACTION_TRACTION
  MOVLW B'00001100'
  CPFSEQ COUNT_RED
  BRA +4
  GOTO ACTION_TRACTION  
  MOVLW B'00000000'
  CPFSEQ CHOOSE_FLAG
  GOTO LOOP_2L
  GOTO LOOP_2S
LOOP_2S:
  MOVLW B'00000111'
  CPFSEQ COUNT_RED
  GOTO LOOP_2S_2
  GOTO ACTION_TRACTION  
LOOP_2S_2:
  MOVLW B'00001000'
  CPFSEQ COUNT_RED
  GOTO LOOP_2S_3
  GOTO ACTION_TRACTION  
LOOP_2S_3:
  MOVLW B'00001001'
  CPFSEQ COUNT_RED
  GOTO LOOP_RED
  CLRF LONG_FLAG
  GOTO ACTION_TRACTION 
LOOP_2L:
  MOVLW B'00001001'
  CPFSEQ COUNT_RED
  GOTO LOOP_RED
  CLRF LONG_FLAG
  GOTO ACTION_TRACTION
;-----------------Main program (traction C)--------------
ACTION_TRACTION:
  SETF BACK_FLAG       ;traction with laser B 
  CLRF COUNT_INT
  BTFSS PORTD,3
  INCF COUNT_INT        
  BTFSS PORTD,2
  INCF COUNT_INT
  BTFSS PORTD,1
  INCF COUNT_INT
  BTFSS PORTD,0
  INCF COUNT_INT
  MOVLW B'00000100'
  CPFSEQ COUNT_INT
  GOTO LOOP_44
  GOTO JUDGE_2
LOOP_44:
  CALL delay_1s
  GOTO LOOP_4
;-----------------Main program (traction D)--------------
LOOP_4: 
  CLRF BACK_FLAG       ;traction with laser A
  SETF FRONT_FLAG
  CLRF COUNT_INT
  BTFSS PORTD,7
  INCF COUNT_INT        
  BTFSS PORTD,6
  INCF COUNT_INT
  BTFSS PORTD,5
  INCF COUNT_INT
  BTFSS PORTD,4
  INCF COUNT_INT
  MOVLW B'00000100'
  CPFSEQ COUNT_INT
  GOTO JUDGE_1 
  GOTO LOOP_RED
  NOP 
;------------------Main program (traction E)--------------
LOOP_7: 
  CALL FORWARD
  CALL SPEED
  CLRF COUNT_INT
  BTFSS PORTD,3
  INCF COUNT_INT        
  BTFSS PORTD,2
  INCF COUNT_INT
  BTFSS PORTD,1
  INCF COUNT_INT
  BTFSS PORTD,0
  INCF COUNT_INT
  MOVLW B'00000100'
  CPFSEQ COUNT_INT
  GOTO LOOP_7 
  GOTO LOOP_7_2
LOOP_7_2:
  CLRF COUNT_INT
  BTFSS PORTD,3
  INCF COUNT_INT        
  BTFSS PORTD,2
  INCF COUNT_INT
  BTFSS PORTD,1
  INCF COUNT_INT
  BTFSS PORTD,0
  INCF COUNT_INT
  MOVLW B'00000100'
  CPFSEQ COUNT_INT
  GOTO LOOP_8
  GOTO LOOP_7_2
LOOP_8:
  CLRF COUNT_INT
  BTFSS PORTD,7
  INCF COUNT_INT        
  BTFSS PORTD,6
  INCF COUNT_INT
  BTFSS PORTD,5
  INCF COUNT_INT
  BTFSS PORTD,4
  INCF COUNT_INT
  MOVLW B'00000100'
  CPFSEQ COUNT_INT
  GOTO LOOP_8 
  GOTO LOOP_RED 
;------------------Main program (traction F)--------------
LOOP_9: 
  BTFSS PORTB,2          ;for long traction
  GOTO LOOP_10
  CLRF TRAC_FLAG
  CALL SELF_CW
  MOVLW duty_60
  MOVWF CCPR1L
  MOVWF CCPR2L  
  NOP
  BTFSS PORTD,1
  BRA $-4
  NOP
  BTFSS PORTD,0
  BRA $-4
  GOTO LOOP_10
LOOP_10:
  GOTO JUDGE_1
;------------------Subroutine (traction)-------------
JUDGE_1:
  CLRF BACK_FLAG2 
  BTFSC PORTA,5
  CALL INCREASE_1
  BTFSC PORTA,4
  CALL INCREASE_2
  MOVF COUNT_L,0
  SUBWF COUNT_R,0
  MOVWF COUNT_C
  BTFSC STATUS,2
  GOTO SPEED_ZERO
  BTFSC STATUS,4
  GOTO NEGATIVE
  GOTO POSITIVE
JUDGE_2:
  MOVLW B'00000000'
  CPFSEQ LONG_FLAG
  GOTO JUDGE_1
  SETF BACK_FLAG2 
  BTFSC PORTC,5
  CALL INCREASE_11
  BTFSC PORTC,4 
  CALL INCREASE_22
  MOVF COUNT_L_B,0
  SUBWF COUNT_R_B,0
  MOVWF COUNT_C
  BTFSC STATUS,2
  GOTO SPEED_ZERO
  BTFSC STATUS,4
  GOTO NEGATIVE
  GOTO POSITIVE

SPEED_ZERO:
  CALL FORWARD
  CALL SPEED
  GOTO LOOP_1

POSITIVE:
R1:
  MOVLW B'00000001'
  CPFSEQ COUNT_C  
  GOTO R2
  GOTO SPEED_ZERO
R2:
  MOVLW B'00000010'
  CPFSEQ COUNT_C
  GOTO R3
  MOVLW B'00000000'
  CPFSEQ LONG_FLAG
  GOTO SPEED_ZERO
  CPFSEQ BACK_FLAG2
  GOTO R3
  CALL SELF_CW
  MOVLW duty_50
  MOVWF CCPR1L
  MOVLW duty_50
  MOVWF CCPR2L
  GOTO LOOP_1
R3:
  MOVLW B'00000011'
  CPFSEQ COUNT_C
  GOTO R4
  MOVLW B'00000000'
  CPFSEQ LONG_FLAG
  GOTO R4
  CPFSEQ BACK_FLAG2
  GOTO R4
  CALL FORWARD
  MOVLW duty_70
  MOVWF CCPR1L
  MOVLW duty_50
  MOVWF CCPR2L
  GOTO LOOP_1
R33:
  CALL FORWARD
  MOVLW duty_60
  MOVWF CCPR1L
  MOVLW duty_50
  MOVWF CCPR2L
  GOTO LOOP_1
R4:
  MOVLW B'00000100'
  CPFSEQ COUNT_C
  GOTO R5
  CPFSEQ BACK_FLAG2
  GOTO R44
  CALL SELF_CW
  CALL SPEED
  GOTO LOOP_1
R44:
  CALL SELF_CW
  MOVLW duty_60
  MOVWF CCPR1L
  MOVLW duty_60
  MOVWF CCPR2L
  GOTO LOOP_1    
R5:
  MOVLW B'00000101'
  CPFSEQ COUNT_C
  GOTO SPEED_ZERO
  MOVLW B'00000000'
  CPFSEQ BACK_FLAG2
  GOTO R55
  CALL SELF_CW
  CALL SPEED
  GOTO LOOP_1
R55:
  CALL FORWARD
  MOVLW duty_70
  MOVWF CCPR1L
  MOVLW duty_50
  MOVWF CCPR2L
  GOTO LOOP_1
NEGATIVE:
NEGF COUNT_C
L1:
  MOVLW B'00000001'
  CPFSEQ COUNT_C
  GOTO L2
  GOTO SPEED_ZERO
L2:
  MOVLW B'00000010'
  CPFSEQ COUNT_C
  GOTO L3
  MOVLW B'00000000'
  CPFSEQ LONG_FLAG
  GOTO SPEED_ZERO
  CPFSEQ BACK_FLAG2
  GOTO L3
  CALL SELF_CCW
  MOVLW duty_50
  MOVWF CCPR1L
  MOVLW duty_50
  MOVWF CCPR2L
  GOTO LOOP_1
L3:
  MOVLW B'00000011'
  CPFSEQ COUNT_C
  GOTO L4
  MOVLW B'00000000'
  CPFSEQ LONG_FLAG
  GOTO L4
  CPFSEQ BACK_FLAG2
  GOTO L4
  CALL FORWARD
  MOVLW duty_50
  MOVWF CCPR1L
  MOVLW duty_64
  MOVWF CCPR2L
  GOTO LOOP_1
L33:
  CALL FORWARD
  MOVLW duty_50
  MOVWF CCPR1L
  MOVLW duty_58
  MOVWF CCPR2L
  GOTO LOOP_1    
L4:
  MOVLW B'00000100'
  CPFSEQ COUNT_C
  GOTO L5
  CPFSEQ BACK_FLAG2
  GOTO L44
  CALL SELF_CCW
  CALL SPEED
  GOTO LOOP_1
L44:
  CALL SELF_CCW
  MOVLW duty_60
  MOVWF CCPR1L
  MOVLW duty_58
  MOVWF CCPR2L
  GOTO LOOP_1      
L5:
  MOVLW B'00000101'
  CPFSEQ COUNT_C
  GOTO SPEED_ZERO
  MOVLW B'00000000'
  CPFSEQ BACK_FLAG2
  GOTO L55
  CALL SELF_CCW
  CALL SPEED
  GOTO LOOP_1
L55:
  CALL FORWARD
  MOVLW duty_50
  MOVWF CCPR1L
  MOVLW duty_66
  MOVWF CCPR2L
  GOTO LOOP_1

SPEED:
  MOVLW duty_70
  MOVWF CCPR1L
  MOVLW duty_64
  MOVWF CCPR2L
  RETURN  
;---------------Subroutine (let it interrrupt)-----------
LOOP_RED:
  NOP
  BSF LATB,1    
  NOP
  BCF LATB,1
  NOP
  BTFSS INT_FLAG,0
  BRA $-4
  CLRF INT_FLAG
  CLRF FRONT_FLAG
  CLRF START_FLAG
  INCF COUNT_RED
  MOVLW B'00001101'
  CPFSEQ COUNT_RED
  GOTO LOOP_1
  GOTO ENDD
ENDD:
  NOP
  GOTO ENDD
;-------------------Subroutine (COUNT_RED)---------------
JUDGE_RED: 
  BCF INTCON3,INT1IF
J_1:
  MOVLW B'00000001'
  CPFSEQ COUNT_RED
  GOTO J_2
  GOTO ACTION_1
J_2:
  MOVLW B'00000010'
  CPFSEQ COUNT_RED
  GOTO J_3
  CPFSEQ HIT_NUMBER
  GOTO J_22
  SETF HIT_FLAG 
  GOTO ACTION_2
J_22:
  SETF HIT_FLAG 
  SETF INT_FLAG
  RETFIE
J_3:
  MOVLW B'00000011'
  CPFSEQ COUNT_RED
  GOTO J_4
  CPFSEQ HIT_NUMBER
  GOTO J_0
  GOTO ACTION_3
J_4:
  MOVLW B'00000100'
  CPFSEQ COUNT_RED
  GOTO J_5
  CPFSEQ HIT_NUMBER
  GOTO J_000
  CLRF HIT_FLAG
  GOTO ACTION_4
J_5:
  MOVLW B'00000101'
  CPFSEQ COUNT_RED
  GOTO J_6
  MOVLW B'00000000'
  CPFSEQ CHOOSE_FLAG
  GOTO J_55
  GOTO ACTION_5
J_55:
  SETF LONG_FLAG
  SETF INT_FLAG
  RETFIE
J_6:
  MOVLW B'00000110'
  CPFSEQ COUNT_RED
  GOTO J_7
  MOVLW B'00000000'
  CPFSEQ CHOOSE_FLAG
  GOTO ACTION_66
  GOTO ACTION_6
J_7:
  MOVLW B'00000111'
  CPFSEQ COUNT_RED
  GOTO J_8
  MOVLW B'00000000'
  CPFSEQ CHOOSE_FLAG
  GOTO J_77
  GOTO J_0
J_77:
  CALL FORWARD
  MOVLW duty_0
  MOVWF CCPR1L
  MOVLW duty_0
  MOVWF CCPR2L
  CALL delay_1s
  CALL delay_1s
  SETF INT_FLAG
  RETFIE
J_8:
  MOVLW B'00001000'
  CPFSEQ COUNT_RED
  GOTO J_9
  MOVLW B'00000000'
  CPFSEQ CHOOSE_FLAG
  GOTO ACTION_88
  GOTO J_0
J_9:
  MOVLW B'00001001'
  CPFSEQ COUNT_RED
  GOTO J_10
  GOTO ACTION_9
J_10:
  MOVLW B'00001010'
  CPFSEQ COUNT_RED
  GOTO J_11
  GOTO ACTION_1
J_11:
  MOVLW B'00001011'
  CPFSEQ COUNT_RED
  GOTO J_12
  GOTO ACTION_11
J_12:
  MOVLW B'00001100'
  CPFSEQ COUNT_RED
  GOTO J_10
  GOTO ACTION_12
J_0:
  SETF INT_FLAG
  NOP
  RETFIE
J_00:
  SETF HIT_FLAG
  SETF INT_FLAG
  NOP
  RETFIE
J_000:
  CLRF HIT_FLAG
  SETF INT_FLAG
  NOP
  RETFIE
;-------------------Subroutine (ACTION)----------------- 
ACTION_1: 
  CALL FORWARD
  CALL SPEED
  CALL delay_1s
  CALL FORWARD
  MOVLW duty_0
  MOVWF CCPR1L
  MOVWF CCPR2L 
  MOVLW B'11111111'
  MOVWF TXREG
  NOP
  BTFSS PIR1,TXIF
  BRA $-4
  BCF PIR1,TXIF
  NOP
  BTFSS PORTB,2
  BRA $-4
  SETF INT_FLAG
  RETFIE      
ACTION_5:        
  CALL FORWARD
  MOVLW duty_70
  MOVWF CCPR1L
  MOVLW duty_64
  MOVWF CCPR2L
  CALL delay_1s
  CALL delay_1s
  CALL FORWARD
  MOVLW duty_0
  MOVWF CCPR1L
  MOVLW duty_0
  MOVWF CCPR2L
  CALL delay_1s
  CALL delay_1s
  CALL SELF_CCW
  MOVLW duty_60
  MOVWF CCPR1L
  MOVWF CCPR2L
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  NOP
  BTFSS PORTD,0
  BRA $-4
  NOP
  BTFSS PORTD,1
  BRA $-4
  SETF LONG_FLAG
  SETF INT_FLAG
  RETFIE 
ACTION_6:    
  CALL FORWARD
  MOVLW duty_70
  MOVWF CCPR1L
  MOVLW duty_64
  MOVWF CCPR2L
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
ACTION_6_2:
  CALL SELF_CCW
  MOVLW duty_70
  MOVWF CCPR1L
  MOVLW duty_64
  MOVWF CCPR2L
  BTFSS PORTD,1
  GOTO ACTION_6_2
  BTFSS PORTD,2
  GOTO ACTION_6_2
  MOVLW B'11111111'
  MOVWF TXREG
  NOP
  BTFSS PIR1,TXIF
  BRA $-4
  BCF PIR1,TXIF
  GOTO FORWARD_6
FORWARD_6:
  CALL FORWARD
  MOVLW duty_70
  MOVWF CCPR1L
  MOVLW duty_68
  MOVWF CCPR2L 
  NOP
  BTFSS PORTB,2
  BRA $-4
  GOTO RIGHT_6
RIGHT_6:
  CALL MOVE_RIGHT
  MOVLW duty_74
  MOVWF CCPR1L
  MOVLW duty_72
  MOVWF CCPR2L
  NOP
  BTFSS PORTB,2
  BRA $-4
  GOTO FORWARD2_6
FORWARD2_6:
  CALL FORWARD
  MOVLW duty_70
  MOVWF CCPR1L
  MOVLW duty_68
  MOVWF CCPR2L 
  NOP
  BTFSS PORTB,2
  BRA $-4
  GOTO LEFT_6
LEFT_6:
  CALL MOVE_LEFT
  MOVLW duty_74
  MOVWF CCPR1L
  MOVLW duty_72
  MOVWF CCPR2L
  NOP
  BTFSS PORTB,2
  BRA $-4
  GOTO FORWARD3_6
FORWARD3_6:
  CALL FORWARD
  MOVLW duty_70
  MOVWF CCPR1L
  MOVLW duty_68
  MOVWF CCPR2L 
  NOP
  BTFSS PORTB,2
  BRA $-4
  GOTO LEFT2_6  
LEFT2_6:
  CALL MOVE_LEFT
  MOVLW duty_74
  MOVWF CCPR1L
  MOVLW duty_72
  MOVWF CCPR2L
  NOP
  BTFSS PORTB,2
  BRA $-4
  GOTO FORWARD4_6
FORWARD4_6:
  CALL FORWARD
  MOVLW duty_70
  MOVWF CCPR1L
  MOVLW duty_68
  MOVWF CCPR2L 
  NOP
  BTFSS PORTB,2
  BRA $-4
  GOTO RIGHT2_6
RIGHT2_6:
  CALL MOVE_RIGHT
  MOVLW duty_74
  MOVWF CCPR1L
  MOVLW duty_72
  MOVWF CCPR2L
  NOP
  BTFSS PORTB,2
  BRA $-4
  GOTO FORWARD5_6
FORWARD5_6:
  CALL FORWARD
  MOVLW duty_70
  MOVWF CCPR1L
  MOVLW duty_68
  MOVWF CCPR2L 
  GOTO END_6
END_6:
  CLRF COUNT_INT
  BTFSC PORTA,4
  INCF COUNT_INT
  BTFSC PORTD,3
  INCF COUNT_INT
  BTFSC PORTD,2
  INCF COUNT_INT 
  BTFSC PORTD,1
  INCF COUNT_INT 
  BTFSC PORTD,0
  INCF COUNT_INT 
  BTFSC PORTA,5
  INCF COUNT_INT
  MOVLW B'00000010'
  CPFSEQ COUNT_INT
  GOTO END2_6
  GOTO END3_6
END2_6:
  CPFSGT COUNT_INT
  GOTO END_6
  GOTO END3_6
END3_6:
  NOP
  SETF INT_FLAG
  RETFIE 
ACTION_66:
  CALL FORWARD
  MOVLW duty_68
  MOVWF CCPR1L
  MOVLW duty_70
  MOVWF CCPR2L
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
ACTION_66_2:
  CALL SELF_CCW
  MOVLW duty_70
  MOVWF CCPR1L
  MOVWF CCPR2L
  BTFSS PORTD,0
  GOTO ACTION_66_2
  BTFSS PORTD,1
  GOTO ACTION_66_2
  SETF INT_FLAG
  RETFIE        
ACTION_88:
  NOP
  SETF TRAC_FLAG
  SETF INT_FLAG
  RETFIE   
ACTION_9:
  CALL MOVE_LEFT
  MOVLW duty_70
  MOVWF CCPR1L
  MOVLW duty_64
  MOVWF CCPR2L
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL FORWARD
  MOVLW duty_0
  MOVWF CCPR1L
  MOVWF CCPR2L  
  MOVLW B'11111111'
  MOVWF TXREG
  NOP
  BTFSS PIR1,TXIF
  BRA $-4
  BCF PIR1,TXIF
  NOP
  BTFSS PORTB,2
  BRA $-4
  CALL MOVE_RIGHT
  MOVLW duty_70
  MOVWF CCPR1L
  MOVLW duty_64
  MOVWF CCPR2L
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  SETF INT_FLAG
  RETFIE 
ACTION_11:
  CALL MOVE_LEFT
  MOVLW duty_70
  MOVWF CCPR1L
  MOVLW duty_64
  MOVWF CCPR2L
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL FORWARD
  MOVLW duty_0
  MOVWF CCPR1L
  MOVWF CCPR2L  
  MOVLW B'11111111'
  MOVWF TXREG
  NOP
  BTFSS PIR1,TXIF
  BRA $-4
  BCF PIR1,TXIF
  NOP
  BTFSS PORTB,2
  BRA $-4
  CALL MOVE_RIGHT
  MOVLW duty_70
  MOVWF CCPR1L
  MOVLW duty_64
  MOVWF CCPR2L
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  SETF LONG_FLAG
  SETF INT_FLAG
  RETFIE 
ACTION_12:
  CALL FORWARD
  MOVLW duty_70
  MOVWF CCPR1L
  MOVLW duty_64
  MOVWF CCPR2L
  CALL delay_1s
  CALL delay_1s
ACTION_12_2:
  CALL SELF_CW
  MOVLW duty_70
  MOVWF CCPR1L
  MOVWF CCPR2L
  BTFSS PORTD,1
  GOTO ACTION_12_2
  BTFSS PORTD,0
  GOTO ACTION_12_2
  SETF INT_FLAG
  RETFIE 
;----------Subroutine (HIT THE NUMBER & WRITE)-------------
ACTION_2:  
  CALL FORWARD
  MOVLW duty_0
  MOVWF CCPR1L
  MOVLW duty_0
  MOVWF CCPR2L
  CALL delay_1s
  CALL delay_1s
  CALL MOVE_RIGHT
  MOVLW duty_70
  MOVWF CCPR1L
  MOVLW duty_64
  MOVWF CCPR2L
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL FORWARD
  MOVLW duty_0
  MOVWF CCPR1L
  MOVWF CCPR2L  
  MOVLW B'11111111'
  MOVWF TXREG
  NOP
  BTFSS PIR1,TXIF
  BRA $-4
  BCF PIR1,TXIF
  NOP
  BTFSS PORTB,2
  BRA $-4
  CALL MOVE_LEFT
  MOVLW duty_70
  MOVWF CCPR1L
  MOVLW duty_64
  MOVWF CCPR2L
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL FORWARD
  MOVLW duty_0
  MOVWF CCPR1L
  MOVLW duty_0
  MOVWF CCPR2L
  CALL delay_1s
  CALL delay_1s
  SETF INT_FLAG
  RETFIE  
ACTION_3:  
  CALL FORWARD
  MOVLW duty_0
  MOVWF CCPR1L
  MOVLW duty_0
  MOVWF CCPR2L
  CALL delay_1s
  CALL delay_1s
  CALL MOVE_RIGHT
  MOVLW duty_70
  MOVWF CCPR1L
  MOVLW duty_64
  MOVWF CCPR2L
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL FORWARD
  MOVLW duty_0
  MOVWF CCPR1L
  MOVWF CCPR2L   
  MOVLW B'11111111'
  MOVWF TXREG
  NOP
  BTFSS PIR1,TXIF
  BRA $-4
  BCF PIR1,TXIF
  NOP
  BTFSS PORTB,2
  BRA $-4
  CALL MOVE_LEFT
  MOVLW duty_70
  MOVWF CCPR1L
  MOVLW duty_64
  MOVWF CCPR2L
  NOP
  BTFSS PORTD,0
  BRA $-4
  NOP
  BTFSS PORTD,1
  BRA $-4
  CALL FORWARD
  MOVLW duty_0
  MOVWF CCPR1L
  MOVLW duty_0
  MOVWF CCPR2L
  CALL delay_1s
  CALL delay_1s
  SETF INT_FLAG
  RETFIE  
ACTION_4:  
  CALL FORWARD
  MOVLW duty_0
  MOVWF CCPR1L
  MOVLW duty_0
  MOVWF CCPR2L
  CALL delay_1s
  CALL delay_1s
  CALL MOVE_RIGHT
  MOVLW duty_70
  MOVWF CCPR1L
  MOVLW duty_64
  MOVWF CCPR2L
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL delay_1s
  CALL FORWARD
  MOVLW duty_0
  MOVWF CCPR1L
  MOVWF CCPR2L    
  MOVLW B'11111111'
  MOVWF TXREG
  NOP
  BTFSS PIR1,TXIF
  BRA $-4
  BCF PIR1,TXIF
  NOP
  BTFSS PORTB,2
  BRA $-4
  CALL MOVE_LEFT
  MOVLW duty_70
  MOVWF CCPR1L
  MOVLW duty_64
  MOVWF CCPR2L
  NOP
  BTFSS PORTD,0
  BRA $-4
  NOP
  BTFSS PORTD,1
  BRA $-4
  CALL FORWARD
  MOVLW duty_0
  MOVWF CCPR1L
  MOVLW duty_0
  MOVWF CCPR2L
  CALL delay_1s
  CALL delay_1s
  CLRF HIT_FLAG
  SETF INT_FLAG
  RETFIE
INT_RX:
  MOVFF STATUS,STATUS_TEMP
  MOVFF WREG,WREG_TEMP
  MOVFF BSR,BSR_TEMP
  BCF PIR1,RCIF 
  MOVLW B'11111111'
  CPFSEQ RESET_FLAG
  GOTO INT_RX2
  MOVF RCREG,0
  MOVWF COUNT_RED
  MOVWF HIT_NUMBER
  MOVFF STATUS_TEMP,STATUS
  MOVFF WREG_TEMP,WREG
  MOVFF BSR_TEMP,BSR  
  CLRF RCREG
  MOVLW B'00000010'
  CPFSEQ COUNT_RED
  BRA +4
  GOTO INT_RX3
  MOVLW B'00000011'
  CPFSEQ COUNT_RED
  BRA +4
  GOTO INT_RX3
  MOVLW B'00000100'
  CPFSEQ COUNT_RED
  BRA +4
  GOTO INT_RX3 
  NOP
  RETFIE
INT_RX2:
  MOVFF RCREG,HIT_NUMBER
  MOVFF STATUS_TEMP,STATUS
  MOVFF WREG_TEMP,WREG
  MOVFF BSR_TEMP,BSR  
  CLRF RCREG
  RETFIE
INT_RX3:
  MOVLW B'00000001'
  MOVWF COUNT_RED
  RETFIE 
;------------------Subroutine (traction)-------------
INCREASE_1:
  INCF COUNT_R
  INCF COUNT_R
  RETURN
INCREASE_2:
  INCF COUNT_L
  INCF COUNT_L
  RETURN
INCREASE_11:
  INCF COUNT_R_B
  INCF COUNT_R_B
  RETURN
INCREASE_22:
  INCF COUNT_L_B
  INCF COUNT_L_B
  RETURN
;--------------------Initial Setting--------------------   
INITIAL_2:  
  CLRF INT_FLAG 
  CLRF START_FLAG
  CLRF FRONT_FLAG 
  CLRF BACK_FLAG 
  CLRF BACK_FLAG2
  CLRF HIT_NUMBER
  CLRF HIT_FLAG  
  CLRF CHOOSE_FLAG
  CLRF TRAC_FLAG  
  CLRF LONG_FLAG
  MOVLW B'00000001'
  MOVWF COUNT_RED
  RETURN
INIT_CCP:
  MOVLW 0x9B
  MOVWF PR2
  BCF TRISC,2
  BCF TRISB,3
  MOVLW B'00001100'
  MOVWF CCP1CON
  MOVWF CCP2CON
  MOVLW B'00000101'
  MOVWF T2CON
  MOVLW duty_0
  MOVWF CCPR1L
  MOVWF CCPR2L
  RETURN
INITIAL_INT:
  BSF RCON,IPEN
  BSF INTCON,GIEH
  BSF INTCON,GIEL
  BCF INTCON3,INT1IF
  BSF INTCON2,INTEDG1 
  BSF INTCON3,INT1IP
  BSF INTCON3,INT1IE
  BCF INTCON3,INT2IE
  RETURN
INITIAL_TXRX:
  MOVLW B'00100000'
  MOVWF TXSTA
  MOVLW B'10010100'
  MOVWF RCSTA
  MOVLW .16
  MOVWF SPBRG  
  BCF IPR1,RCIP
  BCF PIR1,RCIF
  BSF PIE1,RCIE
  BCF PIR1,TXIF
  BCF PIE1,TXIE
  RETURN  
;------------------Direction of pwm-------------------
FORWARD:
  BSF LATB,4
  BCF LATB,5
  BSF LATB,6
  BCF LATB,7
  BSF LATE,0
  BCF LATE,1
  BSF LATE,2
  BCF LATC,3
  RETURN
BACKWARD:
  BCF LATB,4
  BSF LATB,5
  BCF LATB,6
  BSF LATB,7
  BCF LATE,0
  BSF LATE,1
  BCF LATE,2
  BSF LATC,3
  RETURN
SELF_CW:
  BSF LATB,4
  BCF LATB,5
  BSF LATB,6
  BCF LATB,7
  BCF LATE,0
  BSF LATE,1
  BCF LATE,2
  BSF LATC,3
  RETURN
SELF_CCW:
  BCF LATB,4
  BSF LATB,5
  BCF LATB,6
  BSF LATB,7
  BSF LATE,0
  BCF LATE,1
  BSF LATE,2
  BCF LATC,3
  RETURN
MOVE_RIGHT:
  BCF LATB,4
  BSF LATB,5
  BSF LATB,6
  BCF LATB,7
  BSF LATE,0
  BCF LATE,1
  BCF LATE,2
  BSF LATC,3
  RETURN
MOVE_LEFT:
  BSF LATB,4
  BCF LATB,5
  BCF LATB,6
  BSF LATB,7
  BCF LATE,0
  BSF LATE,1
  BSF LATE,2
  BCF LATC,3
  RETURN
FORWARD_RIGHT:
  BCF LATB,4
  BCF LATB,5
  BSF LATB,6
  BCF LATB,7
  BSF LATE,0
  BCF LATE,1
  BCF LATE,2
  BCF LATC,3
  RETURN
FORWARD_LEFT:
  BSF LATB,4
  BCF LATB,5
  BCF LATB,6
  BCF LATB,7
  BCF LATE,0
  BCF LATE,1
  BSF LATE,2
  BCF LATC,3
  RETURN
;------------100 ms delay subroutine--------------
delay_1s:
    movlw val_s
    goto delay_routine
delay_100ms:
    movlw val_ms
    goto delay_routine
delay_routine:
    movwf count_ms
loop_ms:
    call delay_1ms
    decfsz count_ms,f
    goto loop_ms
    return
delay_1ms:
    movlw val_us
    movwf count
dec_loop:
    call D_short
    decfsz count,f
    goto dec_loop
    return
D_short:
    call D_ret
    call D_ret
    nop
    nop
D_ret:
    return
;---------------------Program End-----------------------
END